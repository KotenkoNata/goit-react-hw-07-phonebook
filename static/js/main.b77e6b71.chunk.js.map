{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Container/Container.js","components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","Section","section","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","a","contact","actions","post","data","contactId","delete","get","getFilter","state","contacts","filter","getAllContacts","items","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","this","props","fetchContacts","onDeleteContact","isLoading","loaderConfig","type","color","height","width","loader","contactList","length","map","id","contactItem","button","onClick","notification","Component","connect","contactsSelectors","contactOperations","Filter","onChange","defaultProps","event","contactActions","target","value","ContactForm","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","onSubmit","existingContact","find","alert","reset","form","required","App","createReducer","_","payload","error","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b77e6b71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\nimport Container from '../Container/Container';\n\nconst Section = ({ children }) => (\n  <section className={styles.section}>\n    <Container>{children}</Container>\n  </section>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('fetchContactRequest');\nconst fetchContactSuccess = createAction('fetchContactSuccess');\nconst fetchContactError = createAction('fetchContactError');\n\nconst addContactRequest = createAction('addContactRequest');\nconst addContactSuccess = createAction('addContactSuccess');\nconst addContactError = createAction('addContactError');\n\nconst deleteContactRequest = createAction('deleteContactRequest');\nconst deleteContactSuccess = createAction('deleteContactSuccess');\nconst deleteContactError = createAction('deleteContactError');\n\nconst changeFilter = createAction('contacts/Filter');\n\nconst exports = {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n};\n\nexport default exports;\n","import axios from 'axios';\n\nimport actions from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n\n  dispatch(actions.addContactRequest());\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(actions.deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n  }\n};\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default { getAllContacts, getLoading, getFilter, getVisibleContacts };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  contactOperations,\n  contactsSelectors,\n} from '../../redux/contacts/index';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.css';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, onDeleteContact, isLoading } = this.props;\n\n    const loaderConfig = {\n      type: 'ThreeDots',\n      color: '#303f9f',\n      height: 50,\n      width: 50,\n      className: styles.loader,\n    };\n\n    return (\n      <>\n        {isLoading && <Loader {...loaderConfig} />}\n        <ul className={styles.contactList}>\n          {contacts.length ? (\n            contacts.map(({ id, name, number }) => (\n              <li className={styles.contactItem} key={id}>\n                {name} : {number}\n                <button\n                  type=\"button\"\n                  className={styles.button}\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))\n          ) : (\n            <li className={styles.notification}>No contact found</li>\n          )}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n  isLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactOperations.deleteContact(id)),\n  fetchContacts: () => dispatch(contactOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contacts/contacts-actions';\nimport { contactsSelectors } from '../../redux/contacts/index';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={styles.filter}>\n      Find contacts by name{' '}\n      <input type=\"text\" filter={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(contactActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  contactOperations,\n  contactsSelectors,\n} from '../../redux/contacts/index';\n\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { items, onSubmit } = this.props;\n\n    if (!name) {\n      return;\n    }\n\n    const existingContact = items.find(contact => contact.name === name);\n\n    if (existingContact) {\n      alert(`${existingContact.name} is already in contacts.`);\n      return;\n    }\n\n    onSubmit(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"name\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: contactsSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React, { Component } from 'react';\n\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Section>\n          <h1>PhoneBook</h1>\n          <ContactForm />\n        </Section>\n        <Section>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} = actions;\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactSuccess]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactError]: () => false,\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts/contacts-reducer';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}